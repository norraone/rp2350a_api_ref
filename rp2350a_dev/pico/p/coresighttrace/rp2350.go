// Code generated by svdxgen; DO NOT EDIT.

//go:build rp2350

// Package coresighttrace provides access to the registers of the CORESIGHT_TRACE peripheral.
//
// Instances:
//
//	CORESIGHT_TRACE  CORESIGHT_TRACE_BASE  -  -  Coresight block - RP specific registers
//
// Registers:
//
//	0x000 32  CTRL_STATUS         Control and status register
//	0x004 32  TRACE_CAPTURE_FIFO  FIFO for trace data captured from the TPIU
//
// Import:
//
//	github.com/embeddedgo/pico/p/mmap
package coresighttrace

const (
	TRACE_CAPTURE_FIFO_FLUSH    CTRL_STATUS = 0x01 << 0 //+ Set to 1 to continuously hold the trace FIFO in a flushed state and prevent overflow. Before clearing this flag, configure and start a DMA channel with the correct DREQ for the TRACE_CAPTURE_FIFO register. Clear this flag to begin sampling trace data, and set once again once the trace capture buffer is full. You must configure the TPIU in order to generate trace packets to be captured, as well as components like the ETM further upstream to generate the event stream propagated to the TPIU.
	TRACE_CAPTURE_FIFO_OVERFLOW CTRL_STATUS = 0x01 << 1 //+ This status flag is set high when trace data has been dropped due to the FIFO being full at the point trace data was sampled. Write 1 to acknowledge and clear the bit.
)

const (
	TRACE_CAPTURE_FIFO_FLUSHn    = 0
	TRACE_CAPTURE_FIFO_OVERFLOWn = 1
)
