// Code generated by xgen -g; DO NOT EDIT.

//go:build rp2350

package padsbank

import (
	"embedded/mmio"
	"structs"
	"unsafe"

	"github.com/embeddedgo/pico/p/mmap"
)

type Periph struct {
	_ structs.HostLayout

	VOLTAGE_SELECT mmio.R32[VOLTAGE_SELECT]
	GPIO           [48]mmio.R32[GPIO]
	SWCLK          mmio.R32[GPIO]
	SWD            mmio.R32[GPIO]
}

func PADS_BANK0() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.PADS_BANK0_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type VOLTAGE_SELECT uint32

func IOVDD_(p *Periph) mmio.RM32[VOLTAGE_SELECT] {
	return mmio.RM32[VOLTAGE_SELECT]{R: &p.VOLTAGE_SELECT, Mask: IOVDD}
}

type GPIO uint32

func SLEWFAST_(p *Periph, i int) mmio.RM32[GPIO] {
	return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: SLEWFAST}
}
func SCHMITT_(p *Periph, i int) mmio.RM32[GPIO] { return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: SCHMITT} }
func PDE_(p *Periph, i int) mmio.RM32[GPIO]     { return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: PDE} }
func PUE_(p *Periph, i int) mmio.RM32[GPIO]     { return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: PUE} }
func DRIVE_(p *Periph, i int) mmio.RM32[GPIO]   { return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: DRIVE} }
func IE_(p *Periph, i int) mmio.RM32[GPIO]      { return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: IE} }
func OD_(p *Periph, i int) mmio.RM32[GPIO]      { return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: OD} }
func ISO_(p *Periph, i int) mmio.RM32[GPIO]     { return mmio.RM32[GPIO]{R: &p.GPIO[i], Mask: ISO} }
