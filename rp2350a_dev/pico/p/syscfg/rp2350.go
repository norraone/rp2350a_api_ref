// Code generated by svdxgen; DO NOT EDIT.

//go:build rp2350

// Package syscfg provides access to the registers of the SYSCFG peripheral.
//
// Instances:
//
//	SYSCFG  SYSCFG_BASE  -  -  Register block for various chip control signals
//
// Registers:
//
//	0x000 32  PROC_CONFIG             Configuration for processors
//	0x004 32  PROC_IN_SYNC_BYPASS     For each bit, if 1, bypass the input synchronizer between that GPIO and the GPIO input register in the SIO. The input synchronizers should generally be unbypassed, to avoid injecting metastabilities into processors. If you're feeling brave, you can bypass to save two cycles of input latency. This register applies to GPIO 0...31.
//	0x008 32  PROC_IN_SYNC_BYPASS_HI  For each bit, if 1, bypass the input synchronizer between that GPIO and the GPIO input register in the SIO. The input synchronizers should generally be unbypassed, to avoid injecting metastabilities into processors. If you're feeling brave, you can bypass to save two cycles of input latency. This register applies to GPIO 32...47. USB GPIO 56..57 QSPI GPIO 58..63
//	0x00C 32  DBGFORCE                Directly control the chip SWD debug port
//	0x010 32  MEMPOWERDOWN            Control PD pins to memories. Set high to put memories to a low power state. In this state the memories will retain contents but not be accessible Use with caution
//	0x014 32  AUXCTRL                 Auxiliary system control register
//
// Import:
//
//	github.com/embeddedgo/pico/p/mmap
package syscfg

const (
	PROC0_HALTED PROC_CONFIG = 0x01 << 0 //+ Indication that proc0 has halted
	PROC1_HALTED PROC_CONFIG = 0x01 << 1 //+ Indication that proc1 has halted
)

const (
	PROC0_HALTEDn = 0
	PROC1_HALTEDn = 1
)

const (
	GPIO     PROC_IN_SYNC_BYPASS_HI = 0xFFFF << 0 //+
	USB_DP   PROC_IN_SYNC_BYPASS_HI = 0x01 << 24  //+
	USB_DM   PROC_IN_SYNC_BYPASS_HI = 0x01 << 25  //+
	QSPI_SCK PROC_IN_SYNC_BYPASS_HI = 0x01 << 26  //+
	QSPI_CSN PROC_IN_SYNC_BYPASS_HI = 0x01 << 27  //+
	QSPI_SD  PROC_IN_SYNC_BYPASS_HI = 0x0F << 28  //+
)

const (
	GPIOn     = 0
	USB_DPn   = 24
	USB_DMn   = 25
	QSPI_SCKn = 26
	QSPI_CSNn = 27
	QSPI_SDn  = 28
)

const (
	SWDO   DBGFORCE = 0x01 << 0 //+ Observe the value of SWDIO output.
	SWDI   DBGFORCE = 0x01 << 1 //+ Directly drive SWDIO input, if ATTACH is set
	SWCLK  DBGFORCE = 0x01 << 2 //+ Directly drive SWCLK, if ATTACH is set
	ATTACH DBGFORCE = 0x01 << 3 //+ Attach chip debug port to syscfg controls, and disconnect it from external SWD pads.
)

const (
	SWDOn   = 0
	SWDIn   = 1
	SWCLKn  = 2
	ATTACHn = 3
)

const (
	SRAM0   MEMPOWERDOWN = 0x01 << 0  //+
	SRAM1   MEMPOWERDOWN = 0x01 << 1  //+
	SRAM2   MEMPOWERDOWN = 0x01 << 2  //+
	SRAM3   MEMPOWERDOWN = 0x01 << 3  //+
	SRAM4   MEMPOWERDOWN = 0x01 << 4  //+
	SRAM5   MEMPOWERDOWN = 0x01 << 5  //+
	SRAM6   MEMPOWERDOWN = 0x01 << 6  //+
	SRAM7   MEMPOWERDOWN = 0x01 << 7  //+
	SRAM8   MEMPOWERDOWN = 0x01 << 8  //+
	SRAM9   MEMPOWERDOWN = 0x01 << 9  //+
	USB     MEMPOWERDOWN = 0x01 << 10 //+
	ROM     MEMPOWERDOWN = 0x01 << 11 //+
	BOOTRAM MEMPOWERDOWN = 0x01 << 12 //+
)

const (
	SRAM0n   = 0
	SRAM1n   = 1
	SRAM2n   = 2
	SRAM3n   = 3
	SRAM4n   = 4
	SRAM5n   = 5
	SRAM6n   = 6
	SRAM7n   = 7
	SRAM8n   = 8
	SRAM9n   = 9
	USBn     = 10
	ROMn     = 11
	BOOTRAMn = 12
)
