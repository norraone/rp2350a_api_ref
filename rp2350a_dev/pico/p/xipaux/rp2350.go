// Code generated by svdxgen; DO NOT EDIT.

//go:build rp2350

// Package xipaux provides access to the registers of the XIP_AUX peripheral.
//
// Instances:
//
//	XIP_AUX  XIP_AUX_BASE  -  -  Auxiliary DMA access to XIP FIFOs, via fast AHB bus access
//
// Registers:
//
//	0x000 32  STREAM         Read the XIP stream FIFO (fast bus access to XIP_CTRL_STREAM_FIFO)
//	0x004 32  QMI_DIRECT_TX  Write to the QMI direct-mode TX FIFO (fast bus access to QMI_DIRECT_TX)
//	0x008 32  QMI_DIRECT_RX  Read from the QMI direct-mode RX FIFO (fast bus access to QMI_DIRECT_RX)
//
// Import:
//
//	github.com/embeddedgo/pico/p/mmap
package xipaux

const (
	DATA   QMI_DIRECT_TX = 0xFFFF << 0 //+ Data pushed here will be clocked out falling edges of SCK (or before the very first rising edge of SCK, if this is the first pulse). For each byte clocked out, the interface will simultaneously sample one byte, on rising edges of SCK, and push this to the DIRECT_RX FIFO. For 16-bit data, the least-significant byte is transmitted first.
	IWIDTH QMI_DIRECT_TX = 0x03 << 16  //+ Configure whether this FIFO record is transferred with single/dual/quad interface width (0/1/2). Different widths can be mixed freely.
	S      QMI_DIRECT_TX = 0x00 << 16  //  Single width
	D      QMI_DIRECT_TX = 0x01 << 16  //  Dual width
	Q      QMI_DIRECT_TX = 0x02 << 16  //  Quad width
	DWIDTH QMI_DIRECT_TX = 0x01 << 18  //+ Data width. If 0, hardware will transmit the 8 LSBs of the DIRECT_TX DATA field, and return an 8-bit value in the 8 LSBs of DIRECT_RX. If 1, the full 16-bit width is used. 8-bit and 16-bit transfers can be mixed freely.
	OE     QMI_DIRECT_TX = 0x01 << 19  //+ Output enable (active-high). For single width (SPI), this field is ignored, and SD0 is always set to output, with SD1 always set to input. For dual and quad width (DSPI/QSPI), this sets whether the relevant SDx pads are set to output whilst transferring this FIFO record. In this case the command/address should have OE set, and the data transfer should have OE set or clear depending on the direction of the transfer.
	NOPUSH QMI_DIRECT_TX = 0x01 << 20  //+ Inhibit the RX FIFO push that would correspond to this TX FIFO entry. Useful to avoid garbage appearing in the RX FIFO when pushing the command at the beginning of a SPI transfer.
)

const (
	DATAn   = 0
	IWIDTHn = 16
	DWIDTHn = 18
	OEn     = 19
	NOPUSHn = 20
)
