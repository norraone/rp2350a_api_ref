// Code generated by svdxgen; DO NOT EDIT.

//go:build rp2350

// Package mmap provides base memory adresses for all peripherals.
package mmap

const (
	ACCESSCTRL_BASE      uintptr = 0x40060000 // Hardware access control registers
	ADC_BASE             uintptr = 0x400A0000 // Control and data interface to SAR ADC
	BOOTRAM_BASE         uintptr = 0x400E0000 // Additional registers mapped adjacent to the bootram, for use by the bootrom.
	BUSCTRL_BASE         uintptr = 0x40068000 // Register block for busfabric control signals and performance counters
	CLOCKS_BASE          uintptr = 0x40010000
	CORESIGHT_TRACE_BASE uintptr = 0x50700000 // Coresight block - RP specific registers
	DMA_BASE             uintptr = 0x50000000 // DMA with separate read and write masters
	EPPB_BASE            uintptr = 0xE0080000 // Cortex-M33 EPPB vendor register block for RP2350
	GLITCH_DETECTOR_BASE uintptr = 0x40158000 // Glitch detector controls
	HSTX_CTRL_BASE       uintptr = 0x400C0000 // Control interface to HSTX. For FIFO write access and status, see the HSTX_FIFO register block.
	HSTX_FIFO_BASE       uintptr = 0x50600000 // FIFO status and write access for HSTX
	I2C0_BASE            uintptr = 0x40090000 // DW_apb_i2c address block List of configuration constants for the Synopsys I2C hardware (you may see references to these in I2C register header; these are *fixed* values, set at hardware design time): IC_ULTRA_FAST_MODE ................ 0x0 IC_UFM_TBUF_CNT_DEFAULT ........... 0x8 IC_UFM_SCL_LOW_COUNT .............. 0x0008 IC_UFM_SCL_HIGH_COUNT ............. 0x0006 IC_TX_TL .......................... 0x0 IC_TX_CMD_BLOCK ................... 0x1 IC_HAS_DMA ........................ 0x1 IC_HAS_ASYNC_FIFO ................. 0x0 IC_SMBUS_ARP ...................... 0x0 IC_FIRST_DATA_BYTE_STATUS ......... 0x1 IC_INTR_IO ........................ 0x1 IC_MASTER_MODE .................... 0x1 IC_DEFAULT_ACK_GENERAL_CALL ....... 0x1 IC_INTR_POL ....................... 0x1 IC_OPTIONAL_SAR ................... 0x0 IC_DEFAULT_TAR_SLAVE_ADDR ......... 0x055 IC_DEFAULT_SLAVE_ADDR ............. 0x055 IC_DEFAULT_HS_SPKLEN .............. 0x1 IC_FS_SCL_HIGH_COUNT .............. 0x0006 IC_HS_SCL_LOW_COUNT ............... 0x0008 IC_DEVICE_ID_VALUE ................ 0x0 IC_10BITADDR_MASTER ............... 0x0 IC_CLK_FREQ_OPTIMIZATION .......... 0x0 IC_DEFAULT_FS_SPKLEN .............. 0x7 IC_ADD_ENCODED_PARAMS ............. 0x0 IC_DEFAULT_SDA_HOLD ............... 0x000001 IC_DEFAULT_SDA_SETUP .............. 0x64 IC_AVOID_RX_FIFO_FLUSH_ON_TX_ABRT . 0x0 IC_CLOCK_PERIOD ................... 100 IC_EMPTYFIFO_HOLD_MASTER_EN ....... 1 IC_RESTART_EN ..................... 0x1 IC_TX_CMD_BLOCK_DEFAULT ........... 0x0 IC_BUS_CLEAR_FEATURE .............. 0x0 IC_CAP_LOADING .................... 100 IC_FS_SCL_LOW_COUNT ............... 0x000d APB_DATA_WIDTH .................... 32 IC_SDA_STUCK_TIMEOUT_DEFAULT ...... 0xffffffff IC_SLV_DATA_NACK_ONLY ............. 0x1 IC_10BITADDR_SLAVE ................ 0x0 IC_CLK_TYPE ....................... 0x0 IC_SMBUS_UDID_MSB ................. 0x0 IC_SMBUS_SUSPEND_ALERT ............ 0x0 IC_HS_SCL_HIGH_COUNT .............. 0x0006 IC_SLV_RESTART_DET_EN ............. 0x1 IC_SMBUS .......................... 0x0 IC_OPTIONAL_SAR_DEFAULT ........... 0x0 IC_PERSISTANT_SLV_ADDR_DEFAULT .... 0x0 IC_USE_COUNTS ..................... 0x0 IC_RX_BUFFER_DEPTH ................ 16 IC_SCL_STUCK_TIMEOUT_DEFAULT ...... 0xffffffff IC_RX_FULL_HLD_BUS_EN ............. 0x1 IC_SLAVE_DISABLE .................. 0x1 IC_RX_TL .......................... 0x0 IC_DEVICE_ID ...................... 0x0 IC_HC_COUNT_VALUES ................ 0x0 I2C_DYNAMIC_TAR_UPDATE ............ 0 IC_SMBUS_CLK_LOW_MEXT_DEFAULT ..... 0xffffffff IC_SMBUS_CLK_LOW_SEXT_DEFAULT ..... 0xffffffff IC_HS_MASTER_CODE ................. 0x1 IC_SMBUS_RST_IDLE_CNT_DEFAULT ..... 0xffff IC_SMBUS_UDID_LSB_DEFAULT ......... 0xffffffff IC_SS_SCL_HIGH_COUNT .............. 0x0028 IC_SS_SCL_LOW_COUNT ............... 0x002f IC_MAX_SPEED_MODE ................. 0x2 IC_STAT_FOR_CLK_STRETCH ........... 0x0 IC_STOP_DET_IF_MASTER_ACTIVE ...... 0x0 IC_DEFAULT_UFM_SPKLEN ............. 0x1 IC_TX_BUFFER_DEPTH ................ 16
	I2C1_BASE            uintptr = 0x40098000 // DW_apb_i2c address block List of configuration constants for the Synopsys I2C hardware (you may see references to these in I2C register header; these are *fixed* values, set at hardware design time): IC_ULTRA_FAST_MODE ................ 0x0 IC_UFM_TBUF_CNT_DEFAULT ........... 0x8 IC_UFM_SCL_LOW_COUNT .............. 0x0008 IC_UFM_SCL_HIGH_COUNT ............. 0x0006 IC_TX_TL .......................... 0x0 IC_TX_CMD_BLOCK ................... 0x1 IC_HAS_DMA ........................ 0x1 IC_HAS_ASYNC_FIFO ................. 0x0 IC_SMBUS_ARP ...................... 0x0 IC_FIRST_DATA_BYTE_STATUS ......... 0x1 IC_INTR_IO ........................ 0x1 IC_MASTER_MODE .................... 0x1 IC_DEFAULT_ACK_GENERAL_CALL ....... 0x1 IC_INTR_POL ....................... 0x1 IC_OPTIONAL_SAR ................... 0x0 IC_DEFAULT_TAR_SLAVE_ADDR ......... 0x055 IC_DEFAULT_SLAVE_ADDR ............. 0x055 IC_DEFAULT_HS_SPKLEN .............. 0x1 IC_FS_SCL_HIGH_COUNT .............. 0x0006 IC_HS_SCL_LOW_COUNT ............... 0x0008 IC_DEVICE_ID_VALUE ................ 0x0 IC_10BITADDR_MASTER ............... 0x0 IC_CLK_FREQ_OPTIMIZATION .......... 0x0 IC_DEFAULT_FS_SPKLEN .............. 0x7 IC_ADD_ENCODED_PARAMS ............. 0x0 IC_DEFAULT_SDA_HOLD ............... 0x000001 IC_DEFAULT_SDA_SETUP .............. 0x64 IC_AVOID_RX_FIFO_FLUSH_ON_TX_ABRT . 0x0 IC_CLOCK_PERIOD ................... 100 IC_EMPTYFIFO_HOLD_MASTER_EN ....... 1 IC_RESTART_EN ..................... 0x1 IC_TX_CMD_BLOCK_DEFAULT ........... 0x0 IC_BUS_CLEAR_FEATURE .............. 0x0 IC_CAP_LOADING .................... 100 IC_FS_SCL_LOW_COUNT ............... 0x000d APB_DATA_WIDTH .................... 32 IC_SDA_STUCK_TIMEOUT_DEFAULT ...... 0xffffffff IC_SLV_DATA_NACK_ONLY ............. 0x1 IC_10BITADDR_SLAVE ................ 0x0 IC_CLK_TYPE ....................... 0x0 IC_SMBUS_UDID_MSB ................. 0x0 IC_SMBUS_SUSPEND_ALERT ............ 0x0 IC_HS_SCL_HIGH_COUNT .............. 0x0006 IC_SLV_RESTART_DET_EN ............. 0x1 IC_SMBUS .......................... 0x0 IC_OPTIONAL_SAR_DEFAULT ........... 0x0 IC_PERSISTANT_SLV_ADDR_DEFAULT .... 0x0 IC_USE_COUNTS ..................... 0x0 IC_RX_BUFFER_DEPTH ................ 16 IC_SCL_STUCK_TIMEOUT_DEFAULT ...... 0xffffffff IC_RX_FULL_HLD_BUS_EN ............. 0x1 IC_SLAVE_DISABLE .................. 0x1 IC_RX_TL .......................... 0x0 IC_DEVICE_ID ...................... 0x0 IC_HC_COUNT_VALUES ................ 0x0 I2C_DYNAMIC_TAR_UPDATE ............ 0 IC_SMBUS_CLK_LOW_MEXT_DEFAULT ..... 0xffffffff IC_SMBUS_CLK_LOW_SEXT_DEFAULT ..... 0xffffffff IC_HS_MASTER_CODE ................. 0x1 IC_SMBUS_RST_IDLE_CNT_DEFAULT ..... 0xffff IC_SMBUS_UDID_LSB_DEFAULT ......... 0xffffffff IC_SS_SCL_HIGH_COUNT .............. 0x0028 IC_SS_SCL_LOW_COUNT ............... 0x002f IC_MAX_SPEED_MODE ................. 0x2 IC_STAT_FOR_CLK_STRETCH ........... 0x0 IC_STOP_DET_IF_MASTER_ACTIVE ...... 0x0 IC_DEFAULT_UFM_SPKLEN ............. 0x1 IC_TX_BUFFER_DEPTH ................ 16
	IO_BANK0_BASE        uintptr = 0x40028000
	IO_QSPI_BASE         uintptr = 0x40030000
	OTP_BASE             uintptr = 0x40120000 // SNPS OTP control IF (SBPI and RPi wrapper control)
	OTP_DATA_BASE        uintptr = 0x40130000 // Predefined OTP data layout for RP2350
	OTP_DATA_RAW_BASE    uintptr = 0x40134000 // Predefined OTP data layout for RP2350
	PADS_BANK0_BASE      uintptr = 0x40038000
	PADS_QSPI_BASE       uintptr = 0x40040000
	PIO0_BASE            uintptr = 0x50200000 // Programmable IO block
	PIO1_BASE            uintptr = 0x50300000 // Programmable IO block
	PIO2_BASE            uintptr = 0x50400000 // Programmable IO block
	PLL_SYS_BASE         uintptr = 0x40050000
	PLL_USB_BASE         uintptr = 0x40058000
	POWMAN_BASE          uintptr = 0x40100000 // Controls vreg, bor, lposc, chip resets & xosc startup, powman and provides scratch register for general use and for bootcode use
	PPB_BASE             uintptr = 0xE0000000 // TEAL registers accessible through the debug interface
	PPB_NS_BASE          uintptr = 0xE0020000 // TEAL registers accessible through the debug interface
	PSM_BASE             uintptr = 0x40018000
	PWM_BASE             uintptr = 0x400A8000 // Simple PWM
	QMI_BASE             uintptr = 0x400D0000 // QSPI Memory Interface. Provides a memory-mapped interface to up to two SPI/DSPI/QSPI flash or PSRAM devices. Also provides a serial interface for programming and configuration of the external device.
	RESETS_BASE          uintptr = 0x40020000
	ROSC_BASE            uintptr = 0x400E8000
	SHA256_BASE          uintptr = 0x400F8000 // SHA-256 hash function implementation
	SIO_BASE             uintptr = 0xD0000000 // Single-cycle IO block Provides core-local and inter-core hardware for the two processors, with single-cycle access.
	SIO_NS_BASE          uintptr = 0xD0020000 // Single-cycle IO block Provides core-local and inter-core hardware for the two processors, with single-cycle access.
	SPI0_BASE            uintptr = 0x40080000
	SPI1_BASE            uintptr = 0x40088000
	SYSCFG_BASE          uintptr = 0x40008000 // Register block for various chip control signals
	SYSINFO_BASE         uintptr = 0x40000000
	TBMAN_BASE           uintptr = 0x40160000 // For managing simulation testbenches
	TICKS_BASE           uintptr = 0x40108000
	TIMER0_BASE          uintptr = 0x400B0000 // Controls time and alarms time is a 64 bit value indicating the time since power-on timeh is the top 32 bits of time & timel is the bottom 32 bits to change time write to timelw before timehw to read time read from timelr before timehr An alarm is set by setting alarm_enable and writing to the corresponding alarm register When an alarm is pending, the corresponding alarm_running signal will be high An alarm can be cancelled before it has finished by clearing the alarm_enable When an alarm fires, the corresponding alarm_irq is set and alarm_running is cleared To clear the interrupt write a 1 to the corresponding alarm_irq The timer can be locked to prevent writing
	TIMER1_BASE          uintptr = 0x400B8000 // Controls time and alarms time is a 64 bit value indicating the time since power-on timeh is the top 32 bits of time & timel is the bottom 32 bits to change time write to timelw before timehw to read time read from timelr before timehr An alarm is set by setting alarm_enable and writing to the corresponding alarm register When an alarm is pending, the corresponding alarm_running signal will be high An alarm can be cancelled before it has finished by clearing the alarm_enable When an alarm fires, the corresponding alarm_irq is set and alarm_running is cleared To clear the interrupt write a 1 to the corresponding alarm_irq The timer can be locked to prevent writing
	TRNG_BASE            uintptr = 0x400F0000 // ARM TrustZone RNG register block
	UART0_BASE           uintptr = 0x40070000
	UART1_BASE           uintptr = 0x40078000
	USB_BASE             uintptr = 0x50110000 // USB FS/LS controller device registers
	USB_DPRAM_BASE       uintptr = 0x50100000 // DPRAM layout for USB device.
	WATCHDOG_BASE        uintptr = 0x400D8000
	XIP_AUX_BASE         uintptr = 0x50500000 // Auxiliary DMA access to XIP FIFOs, via fast AHB bus access
	XIP_CTRL_BASE        uintptr = 0x400C8000 // QSPI flash execute-in-place block
	XOSC_BASE            uintptr = 0x40048000 // Controls the crystal oscillator
)
